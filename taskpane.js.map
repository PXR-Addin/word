{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/make namespace object","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"taskpane\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n/* global document, Office, Word */\n\nOffice.onReady((info) => {\n    if (info.host === Office.HostType.Word) {\n        document.getElementById(\"sideload-msg\").style.display = \"none\";\n        document.getElementById(\"app-body\").style.display = \"flex\";\n        document.getElementById(\"fixPDFText\").onclick = fixPDFText;\n        document.getElementById(\"fixPDFTextWithoutStyling\").onclick = fixPDFTextWithoutStyling  // OG Version\n        document.getElementById(\"insertBlobButton\").onclick = insertBlob;\n        document.getElementById(\"insertLeftBracket\").onclick = insertLeftBracket;\n        document.getElementById(\"insertRightBracket\").onclick = insertRightBracket;\n    }\n});\n\nexport async function fixPDFTextWithoutStyling() {\n    try {\n        await Word.run(async (context) => {\n            var selection = context.document.getSelection();\n            context.load(selection);\n\n            await context.sync();\n\n            if (selection.text.length === 0) {\n                console.log(\"Please select some text before running this function v10.\");\n                // Display error message in the taskpane\n                let errorElement = document.getElementById(\"error-message\");\n                errorElement.textContent = \"Please select some text before running this function.\";\n                errorElement.style.display = \"block\";\n                return;\n            }\n\n            var text = selection.text;\n\n            // Remove double line breaks\n            text = text.replace(/\\n\\n/g, '\\n');\n\n            // Remove single line breaks\n            text = text.replace(/\\n/g, ' ');\n\n            // Replace multiple spaces with a single space\n            text = text.replace(/\\s+/g, ' ');\n\n            // Replace the text\n            selection.insertText(text, Word.InsertLocation.replace);\n\n            // Set font properties\n            selection.font.name = \"Neue Haas Grotesk Text Pro\";\n            selection.font.size = 10;\n            selection.font.color = \"000000\";  // Black\n\n            await context.sync();\n        });\n    } catch (error) {\n        console.log(\"Error: \" + error);\n    }\n}\n\n\n\nexport async function fixPDFText() {\n    try {\n        await Word.run(async (context) => {\n            let selection = context.document.getSelection();\n            context.load(selection, 'text');\n            await context.sync();\n\n            // Clear any previous error message\n            document.getElementById(\"error-message\").style.display = \"none\";\n\n            if (selection.text.length === 0) {\n                console.log(\"Please select some text before running this function v11.\");\n                // Display error message in the taskpane\n                let errorElement = document.getElementById(\"error-message\");\n                errorElement.textContent = \"Please select some text before running this function.\";\n                errorElement.style.display = \"block\";\n                return;\n            }\n\n            // Get individual words and their formatting\n            let ranges = selection.getTextRanges([' '], false);\n            context.load(ranges, 'text, font');\n            await context.sync();\n\n            // Store formatting information\n            let formattedWords = ranges.items.map((range, index) => ({\n                originalText: range.text.trim(),\n                text: range.text.trim().replace(/[^\\w\\s]/g, '').toLowerCase(),\n                bold: range.font.bold,\n                italic: range.font.italic,\n                underline: range.font.underline,\n                index: index\n            }));\n\n            console.log(\"Original formatted words:\", formattedWords);\n\n            // Process the text\n            let text = selection.text;\n            text = text.replace(/\\n\\n/g, '\\n').replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n\n            console.log(\"Processed text:\", text);\n\n            // Replace the text and get the new range\n            let newRange = selection.insertText(text, Word.InsertLocation.replace);\n            context.load(newRange, 'text');\n            await context.sync();\n\n            // Split the new text into words\n            let words = text.split(/\\s+/);\n\n            // Create a new range for each word and apply formatting\n            for (let i = 0; i < words.length; i++) {\n                let word = words[i];\n                let searchResults = newRange.search(word, { matchWildcards: false, matchCase: true });\n                context.load(searchResults, 'text, font');\n                await context.sync();\n\n                if (searchResults.items.length > 0) {\n                    let wordRange = searchResults.items[0];\n                    let originalWord = formattedWords.find(w =>\n                        w.originalText === word ||\n                        w.text === word.replace(/[^\\w\\s]/g, '').toLowerCase()\n                    );\n\n                    if (originalWord) {\n                        console.log(`Processing word: \"${word}\", Bold: ${originalWord.bold}, Italic: ${originalWord.italic}, Underline: ${originalWord.underline}`);\n                        wordRange.font.bold = originalWord.bold;\n                        wordRange.font.italic = originalWord.italic;\n                        wordRange.font.underline = originalWord.underline;\n                    } else {\n                        console.log(`No formatting info for word: \"${word}\"`);\n                        wordRange.font.bold = false;\n                        wordRange.font.italic = false;\n                        wordRange.font.underline = 'None';\n                    }\n                } else {\n                    console.log(`Word not found: \"${word}\"`);\n                }\n            }\n\n            // Set font properties for the entire range\n            newRange.font.name = \"Neue Haas Grotesk Text Pro\";\n            newRange.font.size = 10;\n            newRange.font.color = \"000000\";  // Black\n\n            await context.sync();\n            console.log(\"Formatting completed\");\n        });\n    } catch (error) {\n        console.log(\"Error: \" + error);\n        if (error.stack) {\n            console.log(\"Stack trace:\", error.stack);\n        }\n        // Display any caught errors in the taskpane\n        let errorElement = document.getElementById(\"error-message\");\n        errorElement.textContent = \"An error occurred: \" + error.message;\n        errorElement.style.display = \"block\";\n    }\n}\n\n\n\nexport async function insertBlob() {\n    try {\n        await Word.run(async (context) => {\n            let range = context.document.getSelection();\n            // Insert the blob text with specified font family, size, background color, and normal font weight\n            range.insertHtml(' <span style=\"font-family: \\'Neue Haas Grotesk Text Pro\\'; font-size: 10pt; background-color: yellow; font-weight: normal;\">[</span><span style=\"font-family: \\'Neue Haas Grotesk Text Pro\\'; font-size: 10pt; font-weight: normal;\">•</span><span style=\"font-family: \\'Neue Haas Grotesk Text Pro\\'; font-size: 10pt; background-color: yellow; font-weight: normal;\">]</span>', Word.InsertLocation.replace);\n            // Move the cursor to the end of the inserted content\n            let endRange = range.getRange(Word.RangeLocation.end);\n            endRange.select();\n            await context.sync();\n            console.log(\"Function completed\");\n        });\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n}\n\nexport async function insertLeftBracket() {\n    try {\n        await Word.run(async (context) => {\n            let range = context.document.getSelection();\n            // Insert the blob text with specified font family, size, background color, and normal font weight\n            range.insertHtml(' <span style=\"font-family: \\'Neue Haas Grotesk Text Pro\\'; font-size: 10pt; background-color: yellow; font-weight: normal;\">[</span><span style=\"font-family: \\'Neue Haas Grotesk Text Pro\\'; font-size: 10pt; background-color: none; font-weight: normal;\"> </span>', Word.InsertLocation.replace);\n            // Move the cursor to the end of the inserted content\n            let endRange = range.getRange(Word.RangeLocation.end);\n            endRange.select();\n            await context.sync();\n            console.log(\"Function completed\");\n        });\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n}\n\nexport async function insertRightBracket() {\n    try {\n        await Word.run(async (context) => {\n            let range = context.document.getSelection();\n            // Insert the blob text with specified font family, size, background color, and normal font weight\n            range.insertHtml(' <span style=\"font-family: \\'Neue Haas Grotesk Text Pro\\'; font-size: 10pt; background-color: yellow; font-weight: normal;\">]</span><span style=\"font-family: \\'Neue Haas Grotesk Text Pro\\'; font-size: 10pt; background-color: none; font-weight: normal;\"> </span>', Word.InsertLocation.replace);\n            // Move the cursor to the end of the inserted content\n            let endRange = range.getRange(Word.RangeLocation.end);\n            endRange.select();\n            await context.sync();\n            console.log(\"Function completed\");\n        });\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n}","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. -->\\n<!-- This file shows how to design a first-run page that provides a welcome screen to the user about the features of the add-in. -->\\n\\n<!DOCTYPE html>\\n<html>\\n\\n<head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n    <title>Contoso Task Pane Add-in</title>\\n\\n    <!-- Office JavaScript API -->\\n    <\" + \"script type=\\\"text/javascript\\\" src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script>\\n\\n    <!-- For more information on Fluent UI, visit https://developer.microsoft.com/fluentui#/. -->\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/>\\n\\n    <!-- Template styles -->\\n    <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" />\\n</head>\\n\\n<body class=\\\"ms-font-m ms-welcome ms-Fabric\\\">\\n    <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\">\\n        <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\" />\\n        <h3 class=\\\"ms-font-xl\\\">Word Tools für MS Office</h3>\\n    </header>\\n    <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\">\\n        <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2>\\n    </section>\\n    <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display: none;\\\">\\n        <h2 class=\\\"ms-font-xl\\\">  </h2>\\n        <ul class=\\\"ms-List ms-welcome__features\\\">\\n            <li class=\\\"ms-ListItem\\\">\\n                <i class=\\\"ms-Icon ms-Icon--Edit ms-font-xl\\\"></i>\\n                <span class=\\\"ms-font-l\\\">\\n                    Ungewollte Absätze aus PDF-kopierten Texten entfernen\\n                    <p><button id=\\\"fixPDFTextWithoutStyling\\\">Absätze entfernen</button></p>\\n                    <p><button id=\\\"fixPDFText\\\">Absätze entfernen + Format behalten</button></p>\\n                </span>\\n            </li>\\n            <li class=\\\"ms-ListItem\\\">\\n                <i class=\\\"ms-Icon ms-Icon--Edit ms-font-xl\\\"></i>\\n                <span class=\\\"ms-font-l\\\">\\n                    Blob-Platzhalter Einfügen\\n                    <p><button id=\\\"insertLeftBracket\\\">[</button> <button id=\\\"insertBlobButton\\\">[●]</button> <button id=\\\"insertRightBracket\\\">]</button> </p>\\n                    <!-- <p><button id=\\\"debugFunction\\\">Test</button></p> -->\\n                </span>\\n            </li>\\n    <!-- Error for missing selection -->\\n                    <div id=\\\"error-message\\\" style=\\\"color: red; display: none;\\\"></div>\\n</ul>\\n    </main>\\n   \\n\\n</body>\\n\\n</html>\\n\";\n// Exports\nexport default code;"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","Office","onReady","info","host","HostType","Word","document","getElementById","style","display","onclick","fixPDFText","fixPDFTextWithoutStyling","insertBlob","insertLeftBracket","insertRightBracket","_fixPDFTextWithoutStyling","_callee2","_callee2$","_context2","run","_ref","_callee","context","selection","errorElement","text","_callee$","_context","getSelection","load","sync","console","log","textContent","replace","insertText","InsertLocation","font","size","color","_x","t0","_fixPDFText","_callee4","_callee4$","_context5","_ref2","_callee3","ranges","formattedWords","newRange","words","_loop","_callee3$","_context4","getTextRanges","items","map","range","index","originalText","trim","toLowerCase","bold","italic","underline","split","word","searchResults","wordRange","originalWord","_loop$","_context3","search","matchWildcards","matchCase","find","w","concat","_x2","stack","message","_insertBlob","_callee6","_callee6$","_context7","_ref3","_callee5","endRange","_callee5$","_context6","insertHtml","getRange","RangeLocation","end","select","_x3","error","_insertLeftBracket","_callee8","_callee8$","_context9","_ref4","_callee7","_callee7$","_context8","_x4","_insertRightBracket","_callee10","_callee10$","_context11","_ref5","_callee9","_callee9$","_context10","_x5"],"sourceRoot":""}